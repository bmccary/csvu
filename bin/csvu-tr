#!/usr/bin/env python

if __name__ == '__main__':

    from csv import DictReader, DictWriter, excel, excel_tab

    import sys
    import argparse

    from csvu import TrRowFunction

    parser = argparse.ArgumentParser(description='CSVU tr is character translator like GNU tr, but for CSV files.')

    parser.add_argument(
            '--columns', 
            required=False, 
            type=str, 
            nargs='+',
            help='space-separated list of columns to *tr*'
        )

    parser.add_argument(
            '--where', 
            required=False, 
            type=str, 
            nargs=2,
            metavar=('COL', 'REGEX'),
            help='filter for rows to *tr*'
        )

    parser.add_argument(
            '--dialect', 
            default='excel', 
            choices=['excel', 'excel-tab'],
            help='The *excel* dialect uses commas, *excel-tab* uses tabs'
        )

    parser.add_argument(
            'set1', 
            type=str,
            help='The character set to translate *from*'
        )

    parser.add_argument(
            'set2', 
            type=str,
            help='The character set to translate *to*'
        )

    parser.add_argument(
            'file', 
            type=str, 
            nargs='?', 
            default='-',
            help='The CSV file to translate, defaults to STDIN'
        )

    args = parser.parse_args()

    f = sys.stdin
    if args.file != '-':
        f = open(args.file, 'r')

    reader = DictReader(f, dialect=args.dialect)
    tr     = TrRowFunction(args.set1, args.set2, cols=args.columns, where=args.where)
    writer = DictWriter(f=sys.stdout, fieldnames=reader.fieldnames, dialect=args.dialect)

    writer.writeheader()
    writer.writerows(tr(row) for row in reader)

